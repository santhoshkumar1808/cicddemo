# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle
# Needs HEROKU_TOKEN and HEROKU_APP_NAME defined in github secret under setting for the repo or org

name: Build, test, package and deploy my app

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  buildTheJarFile:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 8
        uses: actions/setup-java@v2
        with:
          java-version: '8'
          distribution: 'adopt'
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Build with Gradle
        run: ./gradlew bootJar
      - name: Cache the jar file
        uses: actions/cache@v2
        with:
          path: build/libs/cicddemo-0.0.1-SNAPSHOT.jar
          key: demo-app-jar-${{ github.sha }}

  test:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 8
        uses: actions/setup-java@v2
        with:
          java-version: '8'
          distribution: 'adopt'
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Build with Gradle
        run: ./gradlew test

  packageAndDeploy:
    needs: [ buildTheJarFile, test ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Restore the jar file
        uses: actions/cache@v2
        with:
          path: build/libs/cicddemo-0.0.1-SNAPSHOT.jar
          key: demo-app-jar-${{ github.sha }}
          restore-keys: |
            demo-app-jar-${{ github.sha }}
      - name: Build the docker image
        run: docker build --iidfile image.txt --build-arg JAR_FILE=build/libs/cicddemo-0.0.1-SNAPSHOT.jar -t registry.heroku.com/${{ secrets.HEROKU_APP_NAME }}/web:${GITHUB_SHA} .
      - name: Login to the docker registry
        run: docker login --username=_ --password=${{ secrets.HEROKU_TOKEN }} registry.heroku.com
      - name: Push the docker image to heroku registry
        run: docker push registry.heroku.com/${{ secrets.HEROKU_APP_NAME }}/web:${GITHUB_SHA}
      - name: Start the container
        run: |
          curl -X PATCH https://api.heroku.com/apps/${{ secrets.HEROKU_APP_NAME }}/formation --header "Content-Type: application/json" --header "Accept: application/vnd.heroku+json; version=3.docker-releases" --header "Authorization: Bearer ${{ secrets.HEROKU_TOKEN }}" --data '{ "updates": [ { "type": "web", "docker_image": "'$(cat image.txt)'" } ] }'
